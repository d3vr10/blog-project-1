import type {Metadata} from "next";
import localFont from "next/font/local";
import "./globals.css";
import Navbar from "@/components/navbar";
import {ThemeProvider} from "@/components/theme-provider";
import {Toaster} from "@/components/ui/toaster";
import AuthProvider from "@/app/auth/_components/context";
import AudioComponent from "@/components/audio";
import Footer from "@/app/_components/footer";
import {getServerRequestPathname} from "@/lib/server-utils";


const geistSans = localFont({
    src: "./fonts/GeistVF.woff",
    variable: "--font-geist-sans",
    weight: "100 900",
});
const geistMono = localFont({
    src: "./fonts/GeistMonoVF.woff",
    variable: "--font-geist-mono",
    weight: "100 900",
});

export const metadata: Metadata = {
    title: "Create Next App",
    description: "Generated by create next app",
};

export default function RootLayout({
                                       children,
                                   }: Readonly<{
    children: React.ReactNode;
}>) {

    return (
        <html lang="en" suppressHydrationWarning>
        <body
            className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        >
            <ThemeProvider
                attribute="class"
                defaultTheme="system"
                themes={["light", "dark"]}
                enableSystem
                disableTransitionOnChange
            >

                <AuthProvider>
                    <div className={"flex flex-col min-h-screen "}>
                        <header className={""}>
                            <Navbar/>
                        </header>
                        <main className="p-4 container flex-1 self-center">
                            {children}
                        </main>
                        { !getServerRequestPathname().startsWith("/auth")? <Footer/> : "" }
                    </div>
                </AuthProvider>
            </ThemeProvider>
            <Toaster/>
            <AudioComponent/>
        </body>
        </html>
    );
}
